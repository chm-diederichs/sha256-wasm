
module.exports = loadWebAssembly

loadWebAssembly.supported = typeof WebAssembly !== 'undefined'

function loadWebAssembly (opts) {
  if (!loadWebAssembly.supported) return null

  var imp = opts && opts.imports
  var wasm = toUint8Array('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')
  var ready = null

  var mod = {
    buffer: wasm,
    memory: null,
    exports: null,
    realloc: realloc,
    onload: onload
  }

  onload(function () {})

  return mod

  function realloc (size) {
    mod.exports.memory.grow(Math.max(0, Math.ceil(Math.abs(size - mod.memory.length) / 65536)))
    mod.memory = new Uint8Array(mod.exports.memory.buffer)
  }

  function onload (cb) {
    if (mod.exports) return cb()

    if (ready) {
      ready.then(cb.bind(null, null)).catch(cb)
      return
    }

    try {
      if (opts && opts.async) throw new Error('async')
      setup({instance: new WebAssembly.Instance(new WebAssembly.Module(wasm), imp)})
    } catch (err) {
      ready = WebAssembly.instantiate(wasm, imp).then(setup)
    }

    onload(cb)
  }

  function setup (w) {
    mod.exports = w.instance.exports
    mod.memory = mod.exports.memory && mod.exports.memory.buffer && new Uint8Array(mod.exports.memory.buffer)
  }
}

function toUint8Array (s) {
  if (typeof atob === 'function') return new Uint8Array(atob(s).split('').map(charCodeAt))
  return (require('buf' + 'fer').Buffer).from(s, 'base64')
}

function charCodeAt (c) {
  return c.charCodeAt(0)
}
